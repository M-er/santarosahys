{"version":3,"sources":["ng://@tres-erres/ngx-utils/lib/importe.directive.ts","ng://@tres-erres/ngx-utils/lib/cuit.directive.ts","ng://@tres-erres/ngx-utils/lib/comprobante.directive.ts","ng://@tres-erres/ngx-utils/lib/numform.pipe.ts","ng://@tres-erres/ngx-utils/lib/utils.module.ts"],"names":["ImporteDirective","el","this","regex","RegExp","specialKeys","prototype","onKeyDown","event","current","nativeElement","value","key","length","target","preventDefault","indexOf","split","next","concat","String","match","Directive","args","selector","ElementRef","HostListener","CuitDirective","snackBar","_this","esNumero","selectionStart","selectionEnd","substring","error_1","msg","pos","reto","Number","parseInt","substr","jj","setTimeout","open","duration","panelClass","verticalPosition","horizontalPosition","focus","MatSnackBar","ComprobanteDirective","guion","repeat","valor","replace","includes","NumformPipe","transform","borrarceros","sepmil","sepdec","encero","isNaN","toString","sign","parseFloat","Math","abs","cents","floor","i","Pipe","name","UtilsModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n\tselector: '[trImporte]'\n})\nexport class ImporteDirective {\n\n\tconstructor(\n\t\tprivate el: ElementRef\n\t) { }\n\n\t// Allow decimal numbers and negative values\n\tprivate regex: RegExp = new RegExp(/^-?[0-9]+(\\.[0-9]*){0,1}$/g);\n\n\t// Allow key codes for special events. Reflect :\n\t// Backspace, tab, end, home\n\tprivate specialKeys: Array<string> = [ 'Backspace', 'Tab', 'End', 'Home', '-', 'ArrowLeft', 'ArrowRight' ];\n\n\t@HostListener('keydown', [ '$event' ])\n\tonKeyDown(event: any) {\n\t\tconst current: string = this.el.nativeElement.value;\n\n\t\t// Autocompletar decimal\n\t\tif (event.key === '.') {\n\t\t\tif (current.length === 0) {\n\t\t\t\tevent.target.value = '0.';\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t} else if (current === '-') {\n\t\t\t\tevent.target.value = '-0.';\n\t\t\t\tevent.preventDefault();\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// No permitir otro menos que no sea al principio\n\t\tif (event.key === '-' && current.length > 0) {\n\t\t\tevent.preventDefault();\n\t\t}\n\n\t\t// Allow Backspace, tab, end, and home keys\n\t\tif (this.specialKeys.indexOf(event.key) !== -1) {\n\t\t\treturn;\n\t\t}\n\n\t\t// No permitir mÃ¡s de 2 decimales\n\t\tif (current.indexOf('.') !== -1) {\n\t\t\tconst decimales = current.split('.')[1];\n\t\t\tif (decimales.length > 1) {\n\t\t\t\tevent.preventDefault();\n\t\t\t}\n\t\t}\n\n\t\tconst next: string = current.concat(event.key);\n\t\tif (next && !String(next).match(this.regex)) {\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\nimport { MatSnackBar } from '@angular/material';\n\n@Directive({\n\tselector: '[trCuit]'\n})\nexport class CuitDirective {\n\n\tconstructor(\n\t\tprivate el: ElementRef,\n\t\tprivate snackBar: MatSnackBar\n\t) { }\n\n\t// Allow decimal numbers and negative values\n\tprivate regex: RegExp = new RegExp(/^[0-9]$/g);\n\n\t// Allow key codes for special events. Reflect :\n\t// Backspace, tab, end, home\n\tprivate specialKeys: Array<string> = ['Tab', 'End', 'Home', '-', 'ArrowLeft', 'ArrowRight'];\n\n\t@HostListener('keydown', ['$event'])\n\tonKeyDown(event: any) {\n\t\tif (this.specialKeys.indexOf(event.key) !== -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst esNumero = String(event.key).match(this.regex);\n\n\t\t/** Si no es tecla especial o nÃºmero */\n\t\tif (!esNumero && event.key !== 'Enter' && event.key !== '-' && event.key !== 'Backspace') {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tconst current = this.el.nativeElement.value;\n\t\tconst next: string = this.el.nativeElement.value.concat(event.key);\n\n\t\t/** Si estÃ¡ seleccionado, reemplazo */\n\t\tconst seleccionado = this.el.nativeElement.selectionStart === 0 && this.el.nativeElement.selectionEnd === current.length && current.length > 0;\n\t\tif (seleccionado && esNumero) {\n\t\t\tevent.target.value = event.key;\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif (next.length > 13 && event.key !== 'Enter' && event.key !== 'Backspace') {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif (event.key === 'Backspace' && current.length > 0) {\n\t\t\tif (current.substring(current.length - 1, current.length) === '-') {\n\t\t\t\tevent.target.value = current.substring(0, current.length - 2);\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else if (esNumero) {\n\t\t\tif (next.length === 2 || next.length === 11) {\n\t\t\t\tevent.target.value = current + event.key + '-';\n\t\t\t} else {\n\t\t\t\tevent.target.value = current + event.key;\n\t\t\t}\n\t\t} else if (event.key === 'Enter') {\n\t\t\t// Debe comenzar en 20/23/27/30/33\n\t\t\t// Si el jj es 10 debe comenzar en 23 o 33\n\t\t\tconst cuitsposibles = [20, 23, 27, 30, 33];\n\t\t\tconst error = { msg: '', pos: 0 };\n\t\t\tlet reto = (Number.parseInt(current.substr(10, 1), 10) * 2) + (Number.parseInt(current.substr(9, 1), 10) * 3) + (Number.parseInt(current.substr(8, 1), 10) * 4) + (Number.parseInt(current.substr(7, 1), 10) * 5);\n\t\t\treto += (Number.parseInt(current.substr(6, 1), 10) * 6) + (Number.parseInt(current.substr(5, 1), 10) * 7) + (Number.parseInt(current.substr(4, 1), 10) * 2) + (Number.parseInt(current.substr(3, 1), 10) * 3);\n\t\t\treto += (Number.parseInt(current.substr(1, 1), 10) * 4) + (Number.parseInt(current.substr(0, 1), 10) * 5);\n\t\t\tlet jj = reto % 11;\n\t\t\tif (jj !== 0) {\n\t\t\t\tjj = 11 - jj;\n\t\t\t}\n\t\t\tif (current.length !== 13) {\n\t\t\t\terror.msg = 'El CUIT debe contener 13 nÃºmeros';\n\t\t\t\terror.pos = 13;\n\t\t\t} else if (jj === 10 || cuitsposibles.indexOf(Number(current.substr(0, 2))) === -1) {\n\t\t\t\terror.msg = 'CUIT incorrecto';\n\t\t\t\terror.pos = 0;\n\t\t\t} else if (jj !== Number.parseInt(current.substr(12, 1), 10)) {\n\t\t\t\terror.msg = 'El CUIT deberÃ­a terminar en \"' + jj + '\"';\n\t\t\t\terror.pos = event.target.value.length - 1;\n\t\t\t}\n\t\t\tif (error.msg.length) {\n\t\t\t\tsetTimeout(() => {\n\t\t\t\t\tthis.snackBar.open(error.msg, 'Cerrar', {\n\t\t\t\t\t\tduration: 5 * 1000,\n\t\t\t\t\t\tpanelClass: 'snack',\n\t\t\t\t\t\tverticalPosition: 'bottom',\n\t\t\t\t\t\thorizontalPosition: 'start'\n\t\t\t\t\t});\n\t\t\t\t\tevent.target.value = event.target.value.substr(0, error.pos);\n\t\t\t\t\tevent.target.focus();\n\t\t\t\t\tevent.target.selectionStart = event.target.selectionEnd = event.target.value.length;\n\t\t\t\t}, 100);\n\t\t\t}\n\t\t}\n\t\tevent.preventDefault();\n\t}\n\n}\n","import { Directive, ElementRef, HostListener } from '@angular/core';\n\n@Directive({\n\tselector: '[trComprobante]'\n})\nexport class ComprobanteDirective {\n\n\tconstructor(\n\t\tprivate el: ElementRef,\n\t) { }\n\n\t// Allow decimal numbers and negative values\n\tprivate regex: RegExp = new RegExp(/^[0-9]$/g);\n\n\t// Allow key codes for special events. Reflect :\n\t// Backspace, tab, end, home\n\tprivate specialKeys: Array<string> = ['Backspace', 'Tab', 'End', 'Home', '-', 'ArrowLeft', 'ArrowRight'];\n\n\t@HostListener('keydown', ['$event'])\n\tonKeyDown(event: any) {\n\t\tif (this.specialKeys.indexOf(event.key) !== -1) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst esNumero = String(event.key).match(this.regex);\n\n\t\t/** Si no es tecla especial o nÃºmero */\n\t\tif (!esNumero && event.key !== 'Enter') {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tconst current = this.el.nativeElement.value;\n\t\tconst next: string = this.el.nativeElement.value.concat(event.key);\n\n\t\t/** Si estÃ¡ seleccionado, reemplazo */\n\t\tconst seleccionado = this.el.nativeElement.selectionStart === 0 && this.el.nativeElement.selectionEnd === current.length && current.length > 0;\n\t\tif (seleccionado && esNumero) {\n\t\t\tevent.target.value = event.key;\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif (next.length > 13 && event.key !== 'Enter') {\n\t\t\tevent.preventDefault();\n\t\t\treturn;\n\t\t}\n\n\t\tif (event.key === 'Enter') {\n\t\t\tconst guion = current.indexOf('-');\n\t\t\tif (guion === -1) {\n\t\t\t\tevent.target.value = '0000-' + '0'.repeat(8 - current.length) + current;\n\t\t\t} else {\n\t\t\t\tconst valor = current.replace('-', '');\n\t\t\t\tevent.target.value = '0'.repeat(4 - valor.substring(0, guion).length) + valor.substring(0, guion) + '-' + '0'.repeat(8 - valor.substring(guion, valor.length).length) + valor.substring(guion, valor.length);\n\t\t\t}\n\t\t} else if (current.length === 4 && !current.includes('-')) {\n\t\t\tevent.target.value = current + '-' + event.key;\n\t\t\tevent.preventDefault();\n\t\t}\n\t}\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n\tname: 'numform'\n})\nexport class NumformPipe implements PipeTransform {\n\n\ttransform(\n\t\tvalor: any,\n\t\tborrarceros: boolean = false,\n\t\tsepmil: string = ',',\n\t\tsepdec: string = '.'\n\t): any {\n\t\tlet encero = '';\n\t\tif (!borrarceros) { encero = '0.00'; }\n\t\tif (!valor || isNaN(valor)) { valor = 0; }\n\t\tvalor = valor.toString().replace(/\\$|\\,/g, '');\n\t\tif (valor === 0) { return encero; }\n\t\tconst sign = (Number.parseFloat(valor) === Math.abs(Number.parseFloat(valor)));\n\t\tvalor = Math.abs(Number.parseFloat(valor));\n\t\tvalor = Math.floor((Number.parseFloat(valor) * 100) + 0.50000000001);\n\t\tlet cents: any = valor % 100;\n\t\tif (cents < 10) {\n\t\t\tcents = '0' + cents;\n\t\t}\n\t\tvalor = Math.floor(valor / 100).toString();\n\t\tfor (let i = 0; i < Math.floor((valor.length - (1 + i)) / 3); i++) {\n\t\t\tvalor = valor.substring(0, valor.length - (4 * i + 3)) + sepmil + valor.substring(valor.length - (4 * i + 3));\n\t\t}\n\t\treturn (((sign) ? '' : '-') + valor + sepdec + cents);\n\t}\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ImporteDirective } from './importe.directive';\nimport { CuitDirective } from './cuit.directive';\nimport { ComprobanteDirective } from './comprobante.directive';\nimport { NumformPipe } from './numform.pipe';\n\n@NgModule({\n\tdeclarations: [\n\t\tImporteDirective,\n\t\tCuitDirective,\n\t\tComprobanteDirective,\n\t\tNumformPipe\n\t],\n\timports: [\n\t\tCommonModule\n\t],\n\texports: [\n\t\tImporteDirective,\n\t\tCuitDirective,\n\t\tComprobanteDirective,\n\t\tNumformPipe\n\t]\n})\nexport class UtilsModule { }\n"]}